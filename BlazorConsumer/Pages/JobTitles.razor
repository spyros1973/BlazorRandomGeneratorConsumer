@page "/jobtitles"
<PageTitle>JobTitles</PageTitle>

<section class="hero">
    <div class="hero-body">

        <div class="columns">
            <div class="column is-narrow">
                <img class="image" src="img/job.png" width="64" />
            </div>

            <div class="column">
                <article class="message" style="max-height: 60vh;overflow-y:auto">
                    <div class="message-body">
                        @if (jobTitles.Count == 0)
                        {
                            <p>Use the button below to generate a new bogus job title</p>
                        }
                        else
                        {
                            <ul class="list" style="list-style:circle">
                                @foreach (string job in jobTitles)
                                {
                                    <li class="list-item">@job</li>
                                }
                            </ul>
                        }
                    </div>
                </article>
            </div>
        </div>

    </div>
</section>

<div class="columns">
    <div class="column">
        <button class="button @busy" @onclick="() => GetJobTitle()">Get job title</button>
    </div>
    <div class="column">
        <div class="is-pulled-right field is-horizontal">
            <label class="label" style="padding:.375rem">Language:&nbsp;</label>
            <div class="select">
                <select @bind="lang">
                    <option value="en">English</option>
                    <option value="gr">Greek</option>
                </select>
            </div>

        </div>
    </div>
</div>


@code {
    private string busy = "";
    private string lang = "en";
    private List<string> jobTitles = new();

    async void GetJobTitle()
    {
        busy = "is-loading";
        StateHasChanged();
        jobTitles.Add(await ApiCommunicator.GetJobTitle(lang != "en" ? lang : ""));
        busy = "";
        StateHasChanged();
    }
}

